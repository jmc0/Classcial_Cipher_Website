# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v1
        with:
          python-version: 3.9
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install pipenv and libpq
        working-directory: ./backend
        run: |
          sudo apt-get install libpq-dev -y
          pip install pipenv

      # - name: Cache pipenv virtualenv
      #   working-directory: ./backend
      #   id: cache-pipenv
      #   uses: actions/cache@v1
      #   with:
      #     path: ~/.local/share/virtualenvs
      #     key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies venv
        working-directory: ./backend
        #if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: pipenv install

      - name: Configure AWS profile
        working-directory: ./backend
        run: |
          pipenv run aws configure set region us-west-2 --profile default
          pipenv run aws configure set output json --profile default
          pipenv run aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile default
          pipenv run aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile default
      - name: Zappa deployments
        working-directory: ./backend
        run: pipenv run zappa update --all    
      
      - name: Install dependencies
        id: install-deps
        run: |
          python -m pip install --upgrade pip
      - name: Install plugin
        run: |
          pip install -r requirements.txt
          pip install pytest-github-actions-annotate-failures
          pip install wemake-python-styleguide

      - name: Test with pytest
        run: pytest
      - name: Wemake Python Stylguide
        uses: wemake-services/wemake-python-styleguide@0.16.0
        continue-on-error: true
        with:
          reporter: 'github-pr-review'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
